version
1+1
mean([1,3,4])
demo()
2+1
2 + 1
2 + 1
2 + 1
2 + 1
1/200 * 30
(39+73+2) / 3
v<-32
x
x
x <- 32
x
X <-20
X
#creating new varable
a <- 5
b <- 6
a + b
c <- a+b
c
my_variable <- 10
my_variable
my_variable
my_variable
my_logical <- FALSE
#can reassign value to existing variable
my_logical <- 52
my_logical
c(1, 3.14,5,7)
xNum
xNum <- c(1, 3.14,5,7)
xNum
xLog <- (TRUE, FALSE)
xLog <- (TRUE, FALSE)
xNum <- c(1, 3.14,5,7)
xNum
xLog <- ( TRUE, FALSE)
xLog <- c( TRUE, FALSE)
xLog
xChar <- c("foo", "bar")
z <- c(xNum, 100, 200)
z
z <- c(xNum, 100, 200)
z
xNum <- c(80)
xNum
z <- c(xNum, 100, 200)
z
xNum <- c(1, 3.14,5,7)
xNum
xLog <- c( TRUE, FALSE)
xLog
xChar <- c("foo", "bar")
xChar
#Adding elements
#you need to store into new variable
z <- c(xNum, 100, 200)
z
z
x + 1
x <- c(2,4,6,6)
x + 1
x + 1
x <- c(2,4,6,9)
x + 1
x * pi
x + x
length(x)
1:30
xSeq <- 1:30
xSeq
xNum
xNum[1:2]
xNum[c(1,3)]
myStart <- 2
myStart
xNum[myStart]
myStart <- 4
xNum[myStart]
#Negative indexing
xSeq
xSeq[-5]
xSeq[-5:-7]
xNum[c(TRUE, TRUE, FALSE, FALSE)]
xNum >3
xNum[xNum > 3 ]
xNum >3
length(friend)
friend <- c("eeyore","andreas","jasmine")
length(friend)
friend[1:2]
friend[2:3]
friend[c(2,3)]
friend <- c("eeyore","pooh","tiger")
length(friend)
friend[1:2]
friend[2:3]
friend[c(2,3)]
#get the same result
friend[2:3]
friend[c(2,3)]
friends <- c("eeyore","pooh","tiger")
length(friends)
friends[1:2]
#get the same result
friends[2:3]
friends[c(2,3)]
friends[-1]
#Dataframe
x.df <-read.csv("toy_example.csv")
setwd("~/code/thejasmine/Data_Mining_R")
#Dataframe
x.df <-read.csv("toy_example.csv")
#Dataframe
x.df <-read.csv("toy_example.csv")
x.df <-read.csv("toy_example.csv")
read.csv("toy_example.csv")
x.df[2,1]
x.df[,1]
x.df[2:3, ]
x.df[,]
x.df[,1]
x.df[,]
x.df[, "xNum"]
x.df$Num
x.df$xNum
#names()
names(x.df)
#View()
View(x.df)
#View() ->show the view in another window
View(x.df)
#head()
head(x.df)
tail(x.df)
summary(x.df)
str(x.df)
View(iris)
#iris dataset is built in
View(iris)
#iris dataset is built in
View(iris)
summary(iris)
str(iris)
names(iris)
mean(iris)
mean(iris[,1])
iris[-2,-2]
avg(iris[,2])
average(iris[,2])
mean(iris[,2])
iris['Species']
iris['Species' = 'versicolor']
iris['Species' == 'versicolor']
iris['Species' == 'versicolor']
index = iris[,5] == 'versicolor'
index
iris[index]
iris[index]
iris(index)
#get the last 2 rows in last 2 column from iris data frame
nrow(iris)
ncol(iris)
iris[149:150, 4:5]
numRow <- nrow(iris)
numCol <- ncol(iris)
iris[(numRow-1):numRow,(numCol-1),numCol ]
mean(iris$Petal.Length)
mean(iris[,2])
#get the averate Petal length over all the observation
mean(iris$Petal.Length)
iris$Species == "versicolor"
iris[iris$Species == "versicolor",  ]
#get the averate Petal length over all the observation
mean(iris$Petal.Length)
# find observation whose species are versicolor
iris$Species == "versicolor"
#use row indexing to filter versicolor
iris[iris$Species == "versicolor",  ]
c("Male","Female","Female","Male")
str(sex_vector)
sex_vector = c("Male","Female","Female","Male")
str(sex_vector)
sex_vector = c("Male","Female","Female","Male","Female")
summary(sex_vector)
factor_sex_vector = factor(sex_vector)
factor_sex_vector
#result Levels: Female Male
factor_sex_vector
levels(factor_sex_vector)
str(factor_sex_vector )
str(x.df)
x.df = read.csv("toy_example.csv", stringsAsFactors = TRUE)
str(x.df)
?mean
example(mean)
#ggplot
install.packages("ggplot")
#ggplot
install.packages("ggplot2")
no
#ggplot
install.packages("ggplot2")
library(ggplot2)
ggplot( data = mpg)
View(mpg)
ggplot( data = mpg) + geom_point(aes(x=displ, y=hwy))
ggplot( data = mpg) + geom_point(aes(x=displ, y=hwy))
names(mpg)
#create scatter plot
ggplot( data = mpg) + geom_point(aes(x=displ, y=hwy, color=class))
#create scatter plot
ggplot( data = mpg) +
geom_point(aes(x=displ, y=hwy, color=class)) +
labs(y="highway miles per gallon")
df = read.csv("RidingMowers.csv")
View(df)
ggplot(data=mower.df) + geom_point( aes(x = Income, y=Lot_Size))
mower.df = read.csv("RidingMowers.csv", stringsAsFactors = TRUE)
View(df)
ggplot(data=mower.df) + geom_point( aes(x = Income, y=Lot_Size))
names(df)
mower.df = read.csv("RidingMowers.csv", stringsAsFactors = TRUE)
names(df)
ggplot(data=mower.df) + geom_point( aes(x = Income, y=Lot_Size))
ggplot(data=mower.df) + geom_point( aes(x = Income, y=Lot_Size, color=Ownership))
#bar chart
ggplot(data=mpg) + geom_bar(aes(x=class))
ggplot(data=mpg) + geom_bar(aes(x=class, y=hwy), stat ="summary", fun="mean")
#?stat_summary()
#fun: mean, median, sum, sd
ggplot(data=mpg) + geom_bar(aes(x=class, y=hwy), stat ="summary", fun="mean")
names(mower.df)
ggplot(data=mower.df) + geom_bar(aes(x=Income, y=Ownership), stat ="summary", fun="mean")
ggplot(data=mower.df) + geom_bar(aes(x=Ownership, y=Income), stat ="summary", fun="mean")
